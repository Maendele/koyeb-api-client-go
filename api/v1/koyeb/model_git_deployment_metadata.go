/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GitDeploymentMetadata struct for GitDeploymentMetadata
type GitDeploymentMetadata struct {
	Provider *GitDeploymentMetadataProvider `json:"provider,omitempty"`
	Repository *string `json:"repository,omitempty"`
	Branch *string `json:"branch,omitempty"`
	Sha *string `json:"sha,omitempty"`
	Message *string `json:"message,omitempty"`
	SenderUsername *string `json:"sender_username,omitempty"`
	SenderAvatarUrl *string `json:"sender_avatar_url,omitempty"`
	SenderProfileUrl *string `json:"sender_profile_url,omitempty"`
}

// NewGitDeploymentMetadata instantiates a new GitDeploymentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGitDeploymentMetadata() *GitDeploymentMetadata {
	this := GitDeploymentMetadata{}
	var provider GitDeploymentMetadataProvider = GITDEPLOYMENTMETADATAPROVIDER_UNKNOWN
	this.Provider = &provider
	return &this
}

// NewGitDeploymentMetadataWithDefaults instantiates a new GitDeploymentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGitDeploymentMetadataWithDefaults() *GitDeploymentMetadata {
	this := GitDeploymentMetadata{}
	var provider GitDeploymentMetadataProvider = GITDEPLOYMENTMETADATAPROVIDER_UNKNOWN
	this.Provider = &provider
	return &this
}

// GetProvider returns the Provider field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetProvider() GitDeploymentMetadataProvider {
	if o == nil || o.Provider == nil {
		var ret GitDeploymentMetadataProvider
		return ret
	}
	return *o.Provider
}

// GetProviderOk returns a tuple with the Provider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetProviderOk() (*GitDeploymentMetadataProvider, bool) {
	if o == nil || o.Provider == nil {
		return nil, false
	}
	return o.Provider, true
}

// HasProvider returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasProvider() bool {
	if o != nil && o.Provider != nil {
		return true
	}

	return false
}

// SetProvider gets a reference to the given GitDeploymentMetadataProvider and assigns it to the Provider field.
func (o *GitDeploymentMetadata) SetProvider(v GitDeploymentMetadataProvider) {
	o.Provider = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetRepository() string {
	if o == nil || o.Repository == nil {
		var ret string
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetRepositoryOk() (*string, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given string and assigns it to the Repository field.
func (o *GitDeploymentMetadata) SetRepository(v string) {
	o.Repository = &v
}

// GetBranch returns the Branch field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetBranch() string {
	if o == nil || o.Branch == nil {
		var ret string
		return ret
	}
	return *o.Branch
}

// GetBranchOk returns a tuple with the Branch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetBranchOk() (*string, bool) {
	if o == nil || o.Branch == nil {
		return nil, false
	}
	return o.Branch, true
}

// HasBranch returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasBranch() bool {
	if o != nil && o.Branch != nil {
		return true
	}

	return false
}

// SetBranch gets a reference to the given string and assigns it to the Branch field.
func (o *GitDeploymentMetadata) SetBranch(v string) {
	o.Branch = &v
}

// GetSha returns the Sha field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetSha() string {
	if o == nil || o.Sha == nil {
		var ret string
		return ret
	}
	return *o.Sha
}

// GetShaOk returns a tuple with the Sha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetShaOk() (*string, bool) {
	if o == nil || o.Sha == nil {
		return nil, false
	}
	return o.Sha, true
}

// HasSha returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasSha() bool {
	if o != nil && o.Sha != nil {
		return true
	}

	return false
}

// SetSha gets a reference to the given string and assigns it to the Sha field.
func (o *GitDeploymentMetadata) SetSha(v string) {
	o.Sha = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *GitDeploymentMetadata) SetMessage(v string) {
	o.Message = &v
}

// GetSenderUsername returns the SenderUsername field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetSenderUsername() string {
	if o == nil || o.SenderUsername == nil {
		var ret string
		return ret
	}
	return *o.SenderUsername
}

// GetSenderUsernameOk returns a tuple with the SenderUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetSenderUsernameOk() (*string, bool) {
	if o == nil || o.SenderUsername == nil {
		return nil, false
	}
	return o.SenderUsername, true
}

// HasSenderUsername returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasSenderUsername() bool {
	if o != nil && o.SenderUsername != nil {
		return true
	}

	return false
}

// SetSenderUsername gets a reference to the given string and assigns it to the SenderUsername field.
func (o *GitDeploymentMetadata) SetSenderUsername(v string) {
	o.SenderUsername = &v
}

// GetSenderAvatarUrl returns the SenderAvatarUrl field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetSenderAvatarUrl() string {
	if o == nil || o.SenderAvatarUrl == nil {
		var ret string
		return ret
	}
	return *o.SenderAvatarUrl
}

// GetSenderAvatarUrlOk returns a tuple with the SenderAvatarUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetSenderAvatarUrlOk() (*string, bool) {
	if o == nil || o.SenderAvatarUrl == nil {
		return nil, false
	}
	return o.SenderAvatarUrl, true
}

// HasSenderAvatarUrl returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasSenderAvatarUrl() bool {
	if o != nil && o.SenderAvatarUrl != nil {
		return true
	}

	return false
}

// SetSenderAvatarUrl gets a reference to the given string and assigns it to the SenderAvatarUrl field.
func (o *GitDeploymentMetadata) SetSenderAvatarUrl(v string) {
	o.SenderAvatarUrl = &v
}

// GetSenderProfileUrl returns the SenderProfileUrl field value if set, zero value otherwise.
func (o *GitDeploymentMetadata) GetSenderProfileUrl() string {
	if o == nil || o.SenderProfileUrl == nil {
		var ret string
		return ret
	}
	return *o.SenderProfileUrl
}

// GetSenderProfileUrlOk returns a tuple with the SenderProfileUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GitDeploymentMetadata) GetSenderProfileUrlOk() (*string, bool) {
	if o == nil || o.SenderProfileUrl == nil {
		return nil, false
	}
	return o.SenderProfileUrl, true
}

// HasSenderProfileUrl returns a boolean if a field has been set.
func (o *GitDeploymentMetadata) HasSenderProfileUrl() bool {
	if o != nil && o.SenderProfileUrl != nil {
		return true
	}

	return false
}

// SetSenderProfileUrl gets a reference to the given string and assigns it to the SenderProfileUrl field.
func (o *GitDeploymentMetadata) SetSenderProfileUrl(v string) {
	o.SenderProfileUrl = &v
}

func (o GitDeploymentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Provider != nil {
		toSerialize["provider"] = o.Provider
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.Branch != nil {
		toSerialize["branch"] = o.Branch
	}
	if o.Sha != nil {
		toSerialize["sha"] = o.Sha
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.SenderUsername != nil {
		toSerialize["sender_username"] = o.SenderUsername
	}
	if o.SenderAvatarUrl != nil {
		toSerialize["sender_avatar_url"] = o.SenderAvatarUrl
	}
	if o.SenderProfileUrl != nil {
		toSerialize["sender_profile_url"] = o.SenderProfileUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGitDeploymentMetadata struct {
	value *GitDeploymentMetadata
	isSet bool
}

func (v NullableGitDeploymentMetadata) Get() *GitDeploymentMetadata {
	return v.value
}

func (v *NullableGitDeploymentMetadata) Set(val *GitDeploymentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableGitDeploymentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableGitDeploymentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGitDeploymentMetadata(val *GitDeploymentMetadata) *NullableGitDeploymentMetadata {
	return &NullableGitDeploymentMetadata{value: val, isSet: true}
}

func (v NullableGitDeploymentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGitDeploymentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


