/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DomainsSummary struct for DomainsSummary
type DomainsSummary struct {
	Total *string `json:"total,omitempty"`
	ByStatus *map[string]string `json:"by_status,omitempty"`
}

// NewDomainsSummary instantiates a new DomainsSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDomainsSummary() *DomainsSummary {
	this := DomainsSummary{}
	return &this
}

// NewDomainsSummaryWithDefaults instantiates a new DomainsSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDomainsSummaryWithDefaults() *DomainsSummary {
	this := DomainsSummary{}
	return &this
}

// GetTotal returns the Total field value if set, zero value otherwise.
func (o *DomainsSummary) GetTotal() string {
	if o == nil || isNil(o.Total) {
		var ret string
		return ret
	}
	return *o.Total
}

// GetTotalOk returns a tuple with the Total field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsSummary) GetTotalOk() (*string, bool) {
	if o == nil || isNil(o.Total) {
    return nil, false
	}
	return o.Total, true
}

// HasTotal returns a boolean if a field has been set.
func (o *DomainsSummary) HasTotal() bool {
	if o != nil && !isNil(o.Total) {
		return true
	}

	return false
}

// SetTotal gets a reference to the given string and assigns it to the Total field.
func (o *DomainsSummary) SetTotal(v string) {
	o.Total = &v
}

// GetByStatus returns the ByStatus field value if set, zero value otherwise.
func (o *DomainsSummary) GetByStatus() map[string]string {
	if o == nil || isNil(o.ByStatus) {
		var ret map[string]string
		return ret
	}
	return *o.ByStatus
}

// GetByStatusOk returns a tuple with the ByStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DomainsSummary) GetByStatusOk() (*map[string]string, bool) {
	if o == nil || isNil(o.ByStatus) {
    return nil, false
	}
	return o.ByStatus, true
}

// HasByStatus returns a boolean if a field has been set.
func (o *DomainsSummary) HasByStatus() bool {
	if o != nil && !isNil(o.ByStatus) {
		return true
	}

	return false
}

// SetByStatus gets a reference to the given map[string]string and assigns it to the ByStatus field.
func (o *DomainsSummary) SetByStatus(v map[string]string) {
	o.ByStatus = &v
}

func (o DomainsSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Total) {
		toSerialize["total"] = o.Total
	}
	if !isNil(o.ByStatus) {
		toSerialize["by_status"] = o.ByStatus
	}
	return json.Marshal(toSerialize)
}

type NullableDomainsSummary struct {
	value *DomainsSummary
	isSet bool
}

func (v NullableDomainsSummary) Get() *DomainsSummary {
	return v.value
}

func (v *NullableDomainsSummary) Set(val *DomainsSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableDomainsSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableDomainsSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDomainsSummary(val *DomainsSummary) *NullableDomainsSummary {
	return &NullableDomainsSummary{value: val, isSet: true}
}

func (v NullableDomainsSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDomainsSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


