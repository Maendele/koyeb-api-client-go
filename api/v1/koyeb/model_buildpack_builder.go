/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// BuildpackBuilder struct for BuildpackBuilder
type BuildpackBuilder struct {
	BuildCommand *string `json:"build_command,omitempty"`
	RunCommand *string `json:"run_command,omitempty"`
	Privileged *bool `json:"privileged,omitempty"`
}

// NewBuildpackBuilder instantiates a new BuildpackBuilder object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBuildpackBuilder() *BuildpackBuilder {
	this := BuildpackBuilder{}
	return &this
}

// NewBuildpackBuilderWithDefaults instantiates a new BuildpackBuilder object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBuildpackBuilderWithDefaults() *BuildpackBuilder {
	this := BuildpackBuilder{}
	return &this
}

// GetBuildCommand returns the BuildCommand field value if set, zero value otherwise.
func (o *BuildpackBuilder) GetBuildCommand() string {
	if o == nil || isNil(o.BuildCommand) {
		var ret string
		return ret
	}
	return *o.BuildCommand
}

// GetBuildCommandOk returns a tuple with the BuildCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildpackBuilder) GetBuildCommandOk() (*string, bool) {
	if o == nil || isNil(o.BuildCommand) {
    return nil, false
	}
	return o.BuildCommand, true
}

// HasBuildCommand returns a boolean if a field has been set.
func (o *BuildpackBuilder) HasBuildCommand() bool {
	if o != nil && !isNil(o.BuildCommand) {
		return true
	}

	return false
}

// SetBuildCommand gets a reference to the given string and assigns it to the BuildCommand field.
func (o *BuildpackBuilder) SetBuildCommand(v string) {
	o.BuildCommand = &v
}

// GetRunCommand returns the RunCommand field value if set, zero value otherwise.
func (o *BuildpackBuilder) GetRunCommand() string {
	if o == nil || isNil(o.RunCommand) {
		var ret string
		return ret
	}
	return *o.RunCommand
}

// GetRunCommandOk returns a tuple with the RunCommand field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildpackBuilder) GetRunCommandOk() (*string, bool) {
	if o == nil || isNil(o.RunCommand) {
    return nil, false
	}
	return o.RunCommand, true
}

// HasRunCommand returns a boolean if a field has been set.
func (o *BuildpackBuilder) HasRunCommand() bool {
	if o != nil && !isNil(o.RunCommand) {
		return true
	}

	return false
}

// SetRunCommand gets a reference to the given string and assigns it to the RunCommand field.
func (o *BuildpackBuilder) SetRunCommand(v string) {
	o.RunCommand = &v
}

// GetPrivileged returns the Privileged field value if set, zero value otherwise.
func (o *BuildpackBuilder) GetPrivileged() bool {
	if o == nil || isNil(o.Privileged) {
		var ret bool
		return ret
	}
	return *o.Privileged
}

// GetPrivilegedOk returns a tuple with the Privileged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BuildpackBuilder) GetPrivilegedOk() (*bool, bool) {
	if o == nil || isNil(o.Privileged) {
    return nil, false
	}
	return o.Privileged, true
}

// HasPrivileged returns a boolean if a field has been set.
func (o *BuildpackBuilder) HasPrivileged() bool {
	if o != nil && !isNil(o.Privileged) {
		return true
	}

	return false
}

// SetPrivileged gets a reference to the given bool and assigns it to the Privileged field.
func (o *BuildpackBuilder) SetPrivileged(v bool) {
	o.Privileged = &v
}

func (o BuildpackBuilder) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.BuildCommand) {
		toSerialize["build_command"] = o.BuildCommand
	}
	if !isNil(o.RunCommand) {
		toSerialize["run_command"] = o.RunCommand
	}
	if !isNil(o.Privileged) {
		toSerialize["privileged"] = o.Privileged
	}
	return json.Marshal(toSerialize)
}

type NullableBuildpackBuilder struct {
	value *BuildpackBuilder
	isSet bool
}

func (v NullableBuildpackBuilder) Get() *BuildpackBuilder {
	return v.value
}

func (v *NullableBuildpackBuilder) Set(val *BuildpackBuilder) {
	v.value = val
	v.isSet = true
}

func (v NullableBuildpackBuilder) IsSet() bool {
	return v.isSet
}

func (v *NullableBuildpackBuilder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuildpackBuilder(val *BuildpackBuilder) *NullableBuildpackBuilder {
	return &NullableBuildpackBuilder{value: val, isSet: true}
}

func (v NullableBuildpackBuilder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuildpackBuilder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


