/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// StorageSummaryReply struct for StorageSummaryReply
type StorageSummaryReply struct {
	Summary *StorageSummaryReplySummary `json:"summary,omitempty"`
}

// NewStorageSummaryReply instantiates a new StorageSummaryReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStorageSummaryReply() *StorageSummaryReply {
	this := StorageSummaryReply{}
	return &this
}

// NewStorageSummaryReplyWithDefaults instantiates a new StorageSummaryReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStorageSummaryReplyWithDefaults() *StorageSummaryReply {
	this := StorageSummaryReply{}
	return &this
}

// GetSummary returns the Summary field value if set, zero value otherwise.
func (o *StorageSummaryReply) GetSummary() StorageSummaryReplySummary {
	if o == nil || o.Summary == nil {
		var ret StorageSummaryReplySummary
		return ret
	}
	return *o.Summary
}

// GetSummaryOk returns a tuple with the Summary field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StorageSummaryReply) GetSummaryOk() (*StorageSummaryReplySummary, bool) {
	if o == nil || o.Summary == nil {
		return nil, false
	}
	return o.Summary, true
}

// HasSummary returns a boolean if a field has been set.
func (o *StorageSummaryReply) HasSummary() bool {
	if o != nil && o.Summary != nil {
		return true
	}

	return false
}

// SetSummary gets a reference to the given StorageSummaryReplySummary and assigns it to the Summary field.
func (o *StorageSummaryReply) SetSummary(v StorageSummaryReplySummary) {
	o.Summary = &v
}

func (o StorageSummaryReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Summary != nil {
		toSerialize["summary"] = o.Summary
	}
	return json.Marshal(toSerialize)
}

type NullableStorageSummaryReply struct {
	value *StorageSummaryReply
	isSet bool
}

func (v NullableStorageSummaryReply) Get() *StorageSummaryReply {
	return v.value
}

func (v *NullableStorageSummaryReply) Set(val *StorageSummaryReply) {
	v.value = val
	v.isSet = true
}

func (v NullableStorageSummaryReply) IsSet() bool {
	return v.isSet
}

func (v *NullableStorageSummaryReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStorageSummaryReply(val *StorageSummaryReply) *NullableStorageSummaryReply {
	return &NullableStorageSummaryReply{value: val, isSet: true}
}

func (v NullableStorageSummaryReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStorageSummaryReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


