/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetConnectorByUrlReply struct for GetConnectorByUrlReply
type GetConnectorByUrlReply struct {
	Connector *Connector `json:"connector,omitempty"`
}

// NewGetConnectorByUrlReply instantiates a new GetConnectorByUrlReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetConnectorByUrlReply() *GetConnectorByUrlReply {
	this := GetConnectorByUrlReply{}
	return &this
}

// NewGetConnectorByUrlReplyWithDefaults instantiates a new GetConnectorByUrlReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetConnectorByUrlReplyWithDefaults() *GetConnectorByUrlReply {
	this := GetConnectorByUrlReply{}
	return &this
}

// GetConnector returns the Connector field value if set, zero value otherwise.
func (o *GetConnectorByUrlReply) GetConnector() Connector {
	if o == nil || o.Connector == nil {
		var ret Connector
		return ret
	}
	return *o.Connector
}

// GetConnectorOk returns a tuple with the Connector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetConnectorByUrlReply) GetConnectorOk() (*Connector, bool) {
	if o == nil || o.Connector == nil {
		return nil, false
	}
	return o.Connector, true
}

// HasConnector returns a boolean if a field has been set.
func (o *GetConnectorByUrlReply) HasConnector() bool {
	if o != nil && o.Connector != nil {
		return true
	}

	return false
}

// SetConnector gets a reference to the given Connector and assigns it to the Connector field.
func (o *GetConnectorByUrlReply) SetConnector(v Connector) {
	o.Connector = &v
}

func (o GetConnectorByUrlReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Connector != nil {
		toSerialize["connector"] = o.Connector
	}
	return json.Marshal(toSerialize)
}

type NullableGetConnectorByUrlReply struct {
	value *GetConnectorByUrlReply
	isSet bool
}

func (v NullableGetConnectorByUrlReply) Get() *GetConnectorByUrlReply {
	return v.value
}

func (v *NullableGetConnectorByUrlReply) Set(val *GetConnectorByUrlReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetConnectorByUrlReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetConnectorByUrlReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetConnectorByUrlReply(val *GetConnectorByUrlReply) *NullableGetConnectorByUrlReply {
	return &NullableGetConnectorByUrlReply{value: val, isSet: true}
}

func (v NullableGetConnectorByUrlReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetConnectorByUrlReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


