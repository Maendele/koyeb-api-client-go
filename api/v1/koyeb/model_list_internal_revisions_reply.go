/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ListInternalRevisionsReply struct for ListInternalRevisionsReply
type ListInternalRevisionsReply struct {
	Ids *[]string `json:"ids,omitempty"`
	RevisionIds *[]ServiceRevisionId `json:"revision_ids,omitempty"`
}

// NewListInternalRevisionsReply instantiates a new ListInternalRevisionsReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInternalRevisionsReply() *ListInternalRevisionsReply {
	this := ListInternalRevisionsReply{}
	return &this
}

// NewListInternalRevisionsReplyWithDefaults instantiates a new ListInternalRevisionsReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInternalRevisionsReplyWithDefaults() *ListInternalRevisionsReply {
	this := ListInternalRevisionsReply{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ListInternalRevisionsReply) GetIds() []string {
	if o == nil || o.Ids == nil {
		var ret []string
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInternalRevisionsReply) GetIdsOk() (*[]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ListInternalRevisionsReply) HasIds() bool {
	if o != nil && o.Ids != nil {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *ListInternalRevisionsReply) SetIds(v []string) {
	o.Ids = &v
}

// GetRevisionIds returns the RevisionIds field value if set, zero value otherwise.
func (o *ListInternalRevisionsReply) GetRevisionIds() []ServiceRevisionId {
	if o == nil || o.RevisionIds == nil {
		var ret []ServiceRevisionId
		return ret
	}
	return *o.RevisionIds
}

// GetRevisionIdsOk returns a tuple with the RevisionIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInternalRevisionsReply) GetRevisionIdsOk() (*[]ServiceRevisionId, bool) {
	if o == nil || o.RevisionIds == nil {
		return nil, false
	}
	return o.RevisionIds, true
}

// HasRevisionIds returns a boolean if a field has been set.
func (o *ListInternalRevisionsReply) HasRevisionIds() bool {
	if o != nil && o.RevisionIds != nil {
		return true
	}

	return false
}

// SetRevisionIds gets a reference to the given []ServiceRevisionId and assigns it to the RevisionIds field.
func (o *ListInternalRevisionsReply) SetRevisionIds(v []ServiceRevisionId) {
	o.RevisionIds = &v
}

func (o ListInternalRevisionsReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.RevisionIds != nil {
		toSerialize["revision_ids"] = o.RevisionIds
	}
	return json.Marshal(toSerialize)
}

type NullableListInternalRevisionsReply struct {
	value *ListInternalRevisionsReply
	isSet bool
}

func (v NullableListInternalRevisionsReply) Get() *ListInternalRevisionsReply {
	return v.value
}

func (v *NullableListInternalRevisionsReply) Set(val *ListInternalRevisionsReply) {
	v.value = val
	v.isSet = true
}

func (v NullableListInternalRevisionsReply) IsSet() bool {
	return v.isSet
}

func (v *NullableListInternalRevisionsReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInternalRevisionsReply(val *ListInternalRevisionsReply) *NullableListInternalRevisionsReply {
	return &NullableListInternalRevisionsReply{value: val, isSet: true}
}

func (v NullableListInternalRevisionsReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInternalRevisionsReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


