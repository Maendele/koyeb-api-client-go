/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DeprecatedGetServiceRevisionReply struct for DeprecatedGetServiceRevisionReply
type DeprecatedGetServiceRevisionReply struct {
	Revision *ServiceRevision `json:"revision,omitempty"`
}

// NewDeprecatedGetServiceRevisionReply instantiates a new DeprecatedGetServiceRevisionReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedGetServiceRevisionReply() *DeprecatedGetServiceRevisionReply {
	this := DeprecatedGetServiceRevisionReply{}
	return &this
}

// NewDeprecatedGetServiceRevisionReplyWithDefaults instantiates a new DeprecatedGetServiceRevisionReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedGetServiceRevisionReplyWithDefaults() *DeprecatedGetServiceRevisionReply {
	this := DeprecatedGetServiceRevisionReply{}
	return &this
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *DeprecatedGetServiceRevisionReply) GetRevision() ServiceRevision {
	if o == nil || o.Revision == nil {
		var ret ServiceRevision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedGetServiceRevisionReply) GetRevisionOk() (*ServiceRevision, bool) {
	if o == nil || o.Revision == nil {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *DeprecatedGetServiceRevisionReply) HasRevision() bool {
	if o != nil && o.Revision != nil {
		return true
	}

	return false
}

// SetRevision gets a reference to the given ServiceRevision and assigns it to the Revision field.
func (o *DeprecatedGetServiceRevisionReply) SetRevision(v ServiceRevision) {
	o.Revision = &v
}

func (o DeprecatedGetServiceRevisionReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revision != nil {
		toSerialize["revision"] = o.Revision
	}
	return json.Marshal(toSerialize)
}

type NullableDeprecatedGetServiceRevisionReply struct {
	value *DeprecatedGetServiceRevisionReply
	isSet bool
}

func (v NullableDeprecatedGetServiceRevisionReply) Get() *DeprecatedGetServiceRevisionReply {
	return v.value
}

func (v *NullableDeprecatedGetServiceRevisionReply) Set(val *DeprecatedGetServiceRevisionReply) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedGetServiceRevisionReply) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedGetServiceRevisionReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedGetServiceRevisionReply(val *DeprecatedGetServiceRevisionReply) *NullableDeprecatedGetServiceRevisionReply {
	return &NullableDeprecatedGetServiceRevisionReply{value: val, isSet: true}
}

func (v NullableDeprecatedGetServiceRevisionReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedGetServiceRevisionReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


