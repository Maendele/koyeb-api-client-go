/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// NeonPostgresDatabaseDeploymentMetadata struct for NeonPostgresDatabaseDeploymentMetadata
type NeonPostgresDatabaseDeploymentMetadata struct {
	ResetRolePasswords []string `json:"reset_role_passwords,omitempty"`
}

// NewNeonPostgresDatabaseDeploymentMetadata instantiates a new NeonPostgresDatabaseDeploymentMetadata object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNeonPostgresDatabaseDeploymentMetadata() *NeonPostgresDatabaseDeploymentMetadata {
	this := NeonPostgresDatabaseDeploymentMetadata{}
	return &this
}

// NewNeonPostgresDatabaseDeploymentMetadataWithDefaults instantiates a new NeonPostgresDatabaseDeploymentMetadata object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNeonPostgresDatabaseDeploymentMetadataWithDefaults() *NeonPostgresDatabaseDeploymentMetadata {
	this := NeonPostgresDatabaseDeploymentMetadata{}
	return &this
}

// GetResetRolePasswords returns the ResetRolePasswords field value if set, zero value otherwise.
func (o *NeonPostgresDatabaseDeploymentMetadata) GetResetRolePasswords() []string {
	if o == nil || isNil(o.ResetRolePasswords) {
		var ret []string
		return ret
	}
	return o.ResetRolePasswords
}

// GetResetRolePasswordsOk returns a tuple with the ResetRolePasswords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NeonPostgresDatabaseDeploymentMetadata) GetResetRolePasswordsOk() ([]string, bool) {
	if o == nil || isNil(o.ResetRolePasswords) {
    return nil, false
	}
	return o.ResetRolePasswords, true
}

// HasResetRolePasswords returns a boolean if a field has been set.
func (o *NeonPostgresDatabaseDeploymentMetadata) HasResetRolePasswords() bool {
	if o != nil && !isNil(o.ResetRolePasswords) {
		return true
	}

	return false
}

// SetResetRolePasswords gets a reference to the given []string and assigns it to the ResetRolePasswords field.
func (o *NeonPostgresDatabaseDeploymentMetadata) SetResetRolePasswords(v []string) {
	o.ResetRolePasswords = v
}

func (o NeonPostgresDatabaseDeploymentMetadata) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.ResetRolePasswords) {
		toSerialize["reset_role_passwords"] = o.ResetRolePasswords
	}
	return json.Marshal(toSerialize)
}

type NullableNeonPostgresDatabaseDeploymentMetadata struct {
	value *NeonPostgresDatabaseDeploymentMetadata
	isSet bool
}

func (v NullableNeonPostgresDatabaseDeploymentMetadata) Get() *NeonPostgresDatabaseDeploymentMetadata {
	return v.value
}

func (v *NullableNeonPostgresDatabaseDeploymentMetadata) Set(val *NeonPostgresDatabaseDeploymentMetadata) {
	v.value = val
	v.isSet = true
}

func (v NullableNeonPostgresDatabaseDeploymentMetadata) IsSet() bool {
	return v.isSet
}

func (v *NullableNeonPostgresDatabaseDeploymentMetadata) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNeonPostgresDatabaseDeploymentMetadata(val *NeonPostgresDatabaseDeploymentMetadata) *NullableNeonPostgresDatabaseDeploymentMetadata {
	return &NullableNeonPostgresDatabaseDeploymentMetadata{value: val, isSet: true}
}

func (v NullableNeonPostgresDatabaseDeploymentMetadata) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNeonPostgresDatabaseDeploymentMetadata) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


