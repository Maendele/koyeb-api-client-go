/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// OrganizationSummary struct for OrganizationSummary
type OrganizationSummary struct {
	OrganizationId *string `json:"organization_id,omitempty"`
	Instances *InstancesSummary `json:"instances,omitempty"`
	Apps *AppsSummary `json:"apps,omitempty"`
	Services *map[string]ServiceSummary `json:"services,omitempty"`
	Domains *DomainsSummary `json:"domains,omitempty"`
	Secrets *SecretsSummary `json:"secrets,omitempty"`
	NeonPostgres *NeonPostgresSummary `json:"neon_postgres,omitempty"`
	Members *MembersSummary `json:"members,omitempty"`
}

// NewOrganizationSummary instantiates a new OrganizationSummary object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrganizationSummary() *OrganizationSummary {
	this := OrganizationSummary{}
	return &this
}

// NewOrganizationSummaryWithDefaults instantiates a new OrganizationSummary object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrganizationSummaryWithDefaults() *OrganizationSummary {
	this := OrganizationSummary{}
	return &this
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *OrganizationSummary) GetOrganizationId() string {
	if o == nil || isNil(o.OrganizationId) {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetOrganizationIdOk() (*string, bool) {
	if o == nil || isNil(o.OrganizationId) {
    return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *OrganizationSummary) HasOrganizationId() bool {
	if o != nil && !isNil(o.OrganizationId) {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *OrganizationSummary) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *OrganizationSummary) GetInstances() InstancesSummary {
	if o == nil || isNil(o.Instances) {
		var ret InstancesSummary
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetInstancesOk() (*InstancesSummary, bool) {
	if o == nil || isNil(o.Instances) {
    return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *OrganizationSummary) HasInstances() bool {
	if o != nil && !isNil(o.Instances) {
		return true
	}

	return false
}

// SetInstances gets a reference to the given InstancesSummary and assigns it to the Instances field.
func (o *OrganizationSummary) SetInstances(v InstancesSummary) {
	o.Instances = &v
}

// GetApps returns the Apps field value if set, zero value otherwise.
func (o *OrganizationSummary) GetApps() AppsSummary {
	if o == nil || isNil(o.Apps) {
		var ret AppsSummary
		return ret
	}
	return *o.Apps
}

// GetAppsOk returns a tuple with the Apps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetAppsOk() (*AppsSummary, bool) {
	if o == nil || isNil(o.Apps) {
    return nil, false
	}
	return o.Apps, true
}

// HasApps returns a boolean if a field has been set.
func (o *OrganizationSummary) HasApps() bool {
	if o != nil && !isNil(o.Apps) {
		return true
	}

	return false
}

// SetApps gets a reference to the given AppsSummary and assigns it to the Apps field.
func (o *OrganizationSummary) SetApps(v AppsSummary) {
	o.Apps = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *OrganizationSummary) GetServices() map[string]ServiceSummary {
	if o == nil || isNil(o.Services) {
		var ret map[string]ServiceSummary
		return ret
	}
	return *o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetServicesOk() (*map[string]ServiceSummary, bool) {
	if o == nil || isNil(o.Services) {
    return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *OrganizationSummary) HasServices() bool {
	if o != nil && !isNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given map[string]ServiceSummary and assigns it to the Services field.
func (o *OrganizationSummary) SetServices(v map[string]ServiceSummary) {
	o.Services = &v
}

// GetDomains returns the Domains field value if set, zero value otherwise.
func (o *OrganizationSummary) GetDomains() DomainsSummary {
	if o == nil || isNil(o.Domains) {
		var ret DomainsSummary
		return ret
	}
	return *o.Domains
}

// GetDomainsOk returns a tuple with the Domains field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetDomainsOk() (*DomainsSummary, bool) {
	if o == nil || isNil(o.Domains) {
    return nil, false
	}
	return o.Domains, true
}

// HasDomains returns a boolean if a field has been set.
func (o *OrganizationSummary) HasDomains() bool {
	if o != nil && !isNil(o.Domains) {
		return true
	}

	return false
}

// SetDomains gets a reference to the given DomainsSummary and assigns it to the Domains field.
func (o *OrganizationSummary) SetDomains(v DomainsSummary) {
	o.Domains = &v
}

// GetSecrets returns the Secrets field value if set, zero value otherwise.
func (o *OrganizationSummary) GetSecrets() SecretsSummary {
	if o == nil || isNil(o.Secrets) {
		var ret SecretsSummary
		return ret
	}
	return *o.Secrets
}

// GetSecretsOk returns a tuple with the Secrets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetSecretsOk() (*SecretsSummary, bool) {
	if o == nil || isNil(o.Secrets) {
    return nil, false
	}
	return o.Secrets, true
}

// HasSecrets returns a boolean if a field has been set.
func (o *OrganizationSummary) HasSecrets() bool {
	if o != nil && !isNil(o.Secrets) {
		return true
	}

	return false
}

// SetSecrets gets a reference to the given SecretsSummary and assigns it to the Secrets field.
func (o *OrganizationSummary) SetSecrets(v SecretsSummary) {
	o.Secrets = &v
}

// GetNeonPostgres returns the NeonPostgres field value if set, zero value otherwise.
func (o *OrganizationSummary) GetNeonPostgres() NeonPostgresSummary {
	if o == nil || isNil(o.NeonPostgres) {
		var ret NeonPostgresSummary
		return ret
	}
	return *o.NeonPostgres
}

// GetNeonPostgresOk returns a tuple with the NeonPostgres field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetNeonPostgresOk() (*NeonPostgresSummary, bool) {
	if o == nil || isNil(o.NeonPostgres) {
    return nil, false
	}
	return o.NeonPostgres, true
}

// HasNeonPostgres returns a boolean if a field has been set.
func (o *OrganizationSummary) HasNeonPostgres() bool {
	if o != nil && !isNil(o.NeonPostgres) {
		return true
	}

	return false
}

// SetNeonPostgres gets a reference to the given NeonPostgresSummary and assigns it to the NeonPostgres field.
func (o *OrganizationSummary) SetNeonPostgres(v NeonPostgresSummary) {
	o.NeonPostgres = &v
}

// GetMembers returns the Members field value if set, zero value otherwise.
func (o *OrganizationSummary) GetMembers() MembersSummary {
	if o == nil || isNil(o.Members) {
		var ret MembersSummary
		return ret
	}
	return *o.Members
}

// GetMembersOk returns a tuple with the Members field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrganizationSummary) GetMembersOk() (*MembersSummary, bool) {
	if o == nil || isNil(o.Members) {
    return nil, false
	}
	return o.Members, true
}

// HasMembers returns a boolean if a field has been set.
func (o *OrganizationSummary) HasMembers() bool {
	if o != nil && !isNil(o.Members) {
		return true
	}

	return false
}

// SetMembers gets a reference to the given MembersSummary and assigns it to the Members field.
func (o *OrganizationSummary) SetMembers(v MembersSummary) {
	o.Members = &v
}

func (o OrganizationSummary) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.OrganizationId) {
		toSerialize["organization_id"] = o.OrganizationId
	}
	if !isNil(o.Instances) {
		toSerialize["instances"] = o.Instances
	}
	if !isNil(o.Apps) {
		toSerialize["apps"] = o.Apps
	}
	if !isNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	if !isNil(o.Domains) {
		toSerialize["domains"] = o.Domains
	}
	if !isNil(o.Secrets) {
		toSerialize["secrets"] = o.Secrets
	}
	if !isNil(o.NeonPostgres) {
		toSerialize["neon_postgres"] = o.NeonPostgres
	}
	if !isNil(o.Members) {
		toSerialize["members"] = o.Members
	}
	return json.Marshal(toSerialize)
}

type NullableOrganizationSummary struct {
	value *OrganizationSummary
	isSet bool
}

func (v NullableOrganizationSummary) Get() *OrganizationSummary {
	return v.value
}

func (v *NullableOrganizationSummary) Set(val *OrganizationSummary) {
	v.value = val
	v.isSet = true
}

func (v NullableOrganizationSummary) IsSet() bool {
	return v.isSet
}

func (v *NullableOrganizationSummary) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrganizationSummary(val *OrganizationSummary) *NullableOrganizationSummary {
	return &NullableOrganizationSummary{value: val, isSet: true}
}

func (v NullableOrganizationSummary) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrganizationSummary) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


