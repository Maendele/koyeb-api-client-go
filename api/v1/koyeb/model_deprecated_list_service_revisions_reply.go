/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DeprecatedListServiceRevisionsReply struct for DeprecatedListServiceRevisionsReply
type DeprecatedListServiceRevisionsReply struct {
	Revisions *[]ServiceRevisionListItem `json:"revisions,omitempty"`
	Limit *int64 `json:"limit,omitempty"`
	Offset *int64 `json:"offset,omitempty"`
	Count *int64 `json:"count,omitempty"`
}

// NewDeprecatedListServiceRevisionsReply instantiates a new DeprecatedListServiceRevisionsReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeprecatedListServiceRevisionsReply() *DeprecatedListServiceRevisionsReply {
	this := DeprecatedListServiceRevisionsReply{}
	return &this
}

// NewDeprecatedListServiceRevisionsReplyWithDefaults instantiates a new DeprecatedListServiceRevisionsReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeprecatedListServiceRevisionsReplyWithDefaults() *DeprecatedListServiceRevisionsReply {
	this := DeprecatedListServiceRevisionsReply{}
	return &this
}

// GetRevisions returns the Revisions field value if set, zero value otherwise.
func (o *DeprecatedListServiceRevisionsReply) GetRevisions() []ServiceRevisionListItem {
	if o == nil || o.Revisions == nil {
		var ret []ServiceRevisionListItem
		return ret
	}
	return *o.Revisions
}

// GetRevisionsOk returns a tuple with the Revisions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedListServiceRevisionsReply) GetRevisionsOk() (*[]ServiceRevisionListItem, bool) {
	if o == nil || o.Revisions == nil {
		return nil, false
	}
	return o.Revisions, true
}

// HasRevisions returns a boolean if a field has been set.
func (o *DeprecatedListServiceRevisionsReply) HasRevisions() bool {
	if o != nil && o.Revisions != nil {
		return true
	}

	return false
}

// SetRevisions gets a reference to the given []ServiceRevisionListItem and assigns it to the Revisions field.
func (o *DeprecatedListServiceRevisionsReply) SetRevisions(v []ServiceRevisionListItem) {
	o.Revisions = &v
}

// GetLimit returns the Limit field value if set, zero value otherwise.
func (o *DeprecatedListServiceRevisionsReply) GetLimit() int64 {
	if o == nil || o.Limit == nil {
		var ret int64
		return ret
	}
	return *o.Limit
}

// GetLimitOk returns a tuple with the Limit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedListServiceRevisionsReply) GetLimitOk() (*int64, bool) {
	if o == nil || o.Limit == nil {
		return nil, false
	}
	return o.Limit, true
}

// HasLimit returns a boolean if a field has been set.
func (o *DeprecatedListServiceRevisionsReply) HasLimit() bool {
	if o != nil && o.Limit != nil {
		return true
	}

	return false
}

// SetLimit gets a reference to the given int64 and assigns it to the Limit field.
func (o *DeprecatedListServiceRevisionsReply) SetLimit(v int64) {
	o.Limit = &v
}

// GetOffset returns the Offset field value if set, zero value otherwise.
func (o *DeprecatedListServiceRevisionsReply) GetOffset() int64 {
	if o == nil || o.Offset == nil {
		var ret int64
		return ret
	}
	return *o.Offset
}

// GetOffsetOk returns a tuple with the Offset field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedListServiceRevisionsReply) GetOffsetOk() (*int64, bool) {
	if o == nil || o.Offset == nil {
		return nil, false
	}
	return o.Offset, true
}

// HasOffset returns a boolean if a field has been set.
func (o *DeprecatedListServiceRevisionsReply) HasOffset() bool {
	if o != nil && o.Offset != nil {
		return true
	}

	return false
}

// SetOffset gets a reference to the given int64 and assigns it to the Offset field.
func (o *DeprecatedListServiceRevisionsReply) SetOffset(v int64) {
	o.Offset = &v
}

// GetCount returns the Count field value if set, zero value otherwise.
func (o *DeprecatedListServiceRevisionsReply) GetCount() int64 {
	if o == nil || o.Count == nil {
		var ret int64
		return ret
	}
	return *o.Count
}

// GetCountOk returns a tuple with the Count field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeprecatedListServiceRevisionsReply) GetCountOk() (*int64, bool) {
	if o == nil || o.Count == nil {
		return nil, false
	}
	return o.Count, true
}

// HasCount returns a boolean if a field has been set.
func (o *DeprecatedListServiceRevisionsReply) HasCount() bool {
	if o != nil && o.Count != nil {
		return true
	}

	return false
}

// SetCount gets a reference to the given int64 and assigns it to the Count field.
func (o *DeprecatedListServiceRevisionsReply) SetCount(v int64) {
	o.Count = &v
}

func (o DeprecatedListServiceRevisionsReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Revisions != nil {
		toSerialize["revisions"] = o.Revisions
	}
	if o.Limit != nil {
		toSerialize["limit"] = o.Limit
	}
	if o.Offset != nil {
		toSerialize["offset"] = o.Offset
	}
	if o.Count != nil {
		toSerialize["count"] = o.Count
	}
	return json.Marshal(toSerialize)
}

type NullableDeprecatedListServiceRevisionsReply struct {
	value *DeprecatedListServiceRevisionsReply
	isSet bool
}

func (v NullableDeprecatedListServiceRevisionsReply) Get() *DeprecatedListServiceRevisionsReply {
	return v.value
}

func (v *NullableDeprecatedListServiceRevisionsReply) Set(val *DeprecatedListServiceRevisionsReply) {
	v.value = val
	v.isSet = true
}

func (v NullableDeprecatedListServiceRevisionsReply) IsSet() bool {
	return v.isSet
}

func (v *NullableDeprecatedListServiceRevisionsReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeprecatedListServiceRevisionsReply(val *DeprecatedListServiceRevisionsReply) *NullableDeprecatedListServiceRevisionsReply {
	return &NullableDeprecatedListServiceRevisionsReply{value: val, isSet: true}
}

func (v NullableDeprecatedListServiceRevisionsReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeprecatedListServiceRevisionsReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


