/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// FetchGatewayReply struct for FetchGatewayReply
type FetchGatewayReply struct {
	Routes *[]GatewayRoute `json:"routes,omitempty"`
}

// NewFetchGatewayReply instantiates a new FetchGatewayReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFetchGatewayReply() *FetchGatewayReply {
	this := FetchGatewayReply{}
	return &this
}

// NewFetchGatewayReplyWithDefaults instantiates a new FetchGatewayReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFetchGatewayReplyWithDefaults() *FetchGatewayReply {
	this := FetchGatewayReply{}
	return &this
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *FetchGatewayReply) GetRoutes() []GatewayRoute {
	if o == nil || o.Routes == nil {
		var ret []GatewayRoute
		return ret
	}
	return *o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FetchGatewayReply) GetRoutesOk() (*[]GatewayRoute, bool) {
	if o == nil || o.Routes == nil {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *FetchGatewayReply) HasRoutes() bool {
	if o != nil && o.Routes != nil {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []GatewayRoute and assigns it to the Routes field.
func (o *FetchGatewayReply) SetRoutes(v []GatewayRoute) {
	o.Routes = &v
}

func (o FetchGatewayReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Routes != nil {
		toSerialize["routes"] = o.Routes
	}
	return json.Marshal(toSerialize)
}

type NullableFetchGatewayReply struct {
	value *FetchGatewayReply
	isSet bool
}

func (v NullableFetchGatewayReply) Get() *FetchGatewayReply {
	return v.value
}

func (v *NullableFetchGatewayReply) Set(val *FetchGatewayReply) {
	v.value = val
	v.isSet = true
}

func (v NullableFetchGatewayReply) IsSet() bool {
	return v.isSet
}

func (v *NullableFetchGatewayReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFetchGatewayReply(val *FetchGatewayReply) *NullableFetchGatewayReply {
	return &NullableFetchGatewayReply{value: val, isSet: true}
}

func (v NullableFetchGatewayReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFetchGatewayReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


