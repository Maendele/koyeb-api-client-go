/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DeploymentRoute struct for DeploymentRoute
type DeploymentRoute struct {
	Port *int64 `json:"port,omitempty"`
	Path *string `json:"path,omitempty"`
}

// NewDeploymentRoute instantiates a new DeploymentRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentRoute() *DeploymentRoute {
	this := DeploymentRoute{}
	return &this
}

// NewDeploymentRouteWithDefaults instantiates a new DeploymentRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentRouteWithDefaults() *DeploymentRoute {
	this := DeploymentRoute{}
	return &this
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *DeploymentRoute) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRoute) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *DeploymentRoute) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *DeploymentRoute) SetPort(v int64) {
	o.Port = &v
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *DeploymentRoute) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentRoute) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *DeploymentRoute) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *DeploymentRoute) SetPath(v string) {
	o.Path = &v
}

func (o DeploymentRoute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentRoute struct {
	value *DeploymentRoute
	isSet bool
}

func (v NullableDeploymentRoute) Get() *DeploymentRoute {
	return v.value
}

func (v *NullableDeploymentRoute) Set(val *DeploymentRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentRoute(val *DeploymentRoute) *NullableDeploymentRoute {
	return &NullableDeploymentRoute{value: val, isSet: true}
}

func (v NullableDeploymentRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


