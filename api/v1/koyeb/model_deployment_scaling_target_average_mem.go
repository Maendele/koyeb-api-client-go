/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// DeploymentScalingTargetAverageMem struct for DeploymentScalingTargetAverageMem
type DeploymentScalingTargetAverageMem struct {
	Value *int64 `json:"value,omitempty"`
}

// NewDeploymentScalingTargetAverageMem instantiates a new DeploymentScalingTargetAverageMem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeploymentScalingTargetAverageMem() *DeploymentScalingTargetAverageMem {
	this := DeploymentScalingTargetAverageMem{}
	return &this
}

// NewDeploymentScalingTargetAverageMemWithDefaults instantiates a new DeploymentScalingTargetAverageMem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeploymentScalingTargetAverageMemWithDefaults() *DeploymentScalingTargetAverageMem {
	this := DeploymentScalingTargetAverageMem{}
	return &this
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *DeploymentScalingTargetAverageMem) GetValue() int64 {
	if o == nil || isNil(o.Value) {
		var ret int64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeploymentScalingTargetAverageMem) GetValueOk() (*int64, bool) {
	if o == nil || isNil(o.Value) {
    return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *DeploymentScalingTargetAverageMem) HasValue() bool {
	if o != nil && !isNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int64 and assigns it to the Value field.
func (o *DeploymentScalingTargetAverageMem) SetValue(v int64) {
	o.Value = &v
}

func (o DeploymentScalingTargetAverageMem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullableDeploymentScalingTargetAverageMem struct {
	value *DeploymentScalingTargetAverageMem
	isSet bool
}

func (v NullableDeploymentScalingTargetAverageMem) Get() *DeploymentScalingTargetAverageMem {
	return v.value
}

func (v *NullableDeploymentScalingTargetAverageMem) Set(val *DeploymentScalingTargetAverageMem) {
	v.value = val
	v.isSet = true
}

func (v NullableDeploymentScalingTargetAverageMem) IsSet() bool {
	return v.isSet
}

func (v *NullableDeploymentScalingTargetAverageMem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeploymentScalingTargetAverageMem(val *DeploymentScalingTargetAverageMem) *NullableDeploymentScalingTargetAverageMem {
	return &NullableDeploymentScalingTargetAverageMem{value: val, isSet: true}
}

func (v NullableDeploymentScalingTargetAverageMem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeploymentScalingTargetAverageMem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


