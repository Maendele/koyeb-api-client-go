/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ServiceState struct for ServiceState
type ServiceState struct {
	DesiredDeployment *DeploymentState `json:"desired_deployment,omitempty"`
	AutoRelease *AutoRelease `json:"auto_release,omitempty"`
	Status *ServiceStateStatus `json:"status,omitempty"`
}

// NewServiceState instantiates a new ServiceState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceState() *ServiceState {
	this := ServiceState{}
	var status ServiceStateStatus = SERVICESTATESTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// NewServiceStateWithDefaults instantiates a new ServiceState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceStateWithDefaults() *ServiceState {
	this := ServiceState{}
	var status ServiceStateStatus = SERVICESTATESTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// GetDesiredDeployment returns the DesiredDeployment field value if set, zero value otherwise.
func (o *ServiceState) GetDesiredDeployment() DeploymentState {
	if o == nil || o.DesiredDeployment == nil {
		var ret DeploymentState
		return ret
	}
	return *o.DesiredDeployment
}

// GetDesiredDeploymentOk returns a tuple with the DesiredDeployment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceState) GetDesiredDeploymentOk() (*DeploymentState, bool) {
	if o == nil || o.DesiredDeployment == nil {
		return nil, false
	}
	return o.DesiredDeployment, true
}

// HasDesiredDeployment returns a boolean if a field has been set.
func (o *ServiceState) HasDesiredDeployment() bool {
	if o != nil && o.DesiredDeployment != nil {
		return true
	}

	return false
}

// SetDesiredDeployment gets a reference to the given DeploymentState and assigns it to the DesiredDeployment field.
func (o *ServiceState) SetDesiredDeployment(v DeploymentState) {
	o.DesiredDeployment = &v
}

// GetAutoRelease returns the AutoRelease field value if set, zero value otherwise.
func (o *ServiceState) GetAutoRelease() AutoRelease {
	if o == nil || o.AutoRelease == nil {
		var ret AutoRelease
		return ret
	}
	return *o.AutoRelease
}

// GetAutoReleaseOk returns a tuple with the AutoRelease field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceState) GetAutoReleaseOk() (*AutoRelease, bool) {
	if o == nil || o.AutoRelease == nil {
		return nil, false
	}
	return o.AutoRelease, true
}

// HasAutoRelease returns a boolean if a field has been set.
func (o *ServiceState) HasAutoRelease() bool {
	if o != nil && o.AutoRelease != nil {
		return true
	}

	return false
}

// SetAutoRelease gets a reference to the given AutoRelease and assigns it to the AutoRelease field.
func (o *ServiceState) SetAutoRelease(v AutoRelease) {
	o.AutoRelease = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServiceState) GetStatus() ServiceStateStatus {
	if o == nil || o.Status == nil {
		var ret ServiceStateStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceState) GetStatusOk() (*ServiceStateStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceState) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceStateStatus and assigns it to the Status field.
func (o *ServiceState) SetStatus(v ServiceStateStatus) {
	o.Status = &v
}

func (o ServiceState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.DesiredDeployment != nil {
		toSerialize["desired_deployment"] = o.DesiredDeployment
	}
	if o.AutoRelease != nil {
		toSerialize["auto_release"] = o.AutoRelease
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	return json.Marshal(toSerialize)
}

type NullableServiceState struct {
	value *ServiceState
	isSet bool
}

func (v NullableServiceState) Get() *ServiceState {
	return v.value
}

func (v *NullableServiceState) Set(val *ServiceState) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceState) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceState(val *ServiceState) *NullableServiceState {
	return &NullableServiceState{value: val, isSet: true}
}

func (v NullableServiceState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


