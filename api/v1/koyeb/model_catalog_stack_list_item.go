/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// CatalogStackListItem struct for CatalogStackListItem
type CatalogStackListItem struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Status *BaseCatalogStatus `json:"status,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	SourceControlRef *SCMReference `json:"source_control_ref,omitempty"`
}

// NewCatalogStackListItem instantiates a new CatalogStackListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogStackListItem() *CatalogStackListItem {
	this := CatalogStackListItem{}
	var status BaseCatalogStatus = BASECATALOGSTATUS_COMING_SOON
	this.Status = &status
	return &this
}

// NewCatalogStackListItemWithDefaults instantiates a new CatalogStackListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogStackListItemWithDefaults() *CatalogStackListItem {
	this := CatalogStackListItem{}
	var status BaseCatalogStatus = BASECATALOGSTATUS_COMING_SOON
	this.Status = &status
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogStackListItem) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CatalogStackListItem) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetShortDescription() string {
	if o == nil || o.ShortDescription == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetShortDescriptionOk() (*string, bool) {
	if o == nil || o.ShortDescription == nil {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasShortDescription() bool {
	if o != nil && o.ShortDescription != nil {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *CatalogStackListItem) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CatalogStackListItem) SetIcon(v string) {
	o.Icon = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetStatus() BaseCatalogStatus {
	if o == nil || o.Status == nil {
		var ret BaseCatalogStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetStatusOk() (*BaseCatalogStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BaseCatalogStatus and assigns it to the Status field.
func (o *CatalogStackListItem) SetStatus(v BaseCatalogStatus) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CatalogStackListItem) SetTags(v []string) {
	o.Tags = &v
}

// GetSourceControlRef returns the SourceControlRef field value if set, zero value otherwise.
func (o *CatalogStackListItem) GetSourceControlRef() SCMReference {
	if o == nil || o.SourceControlRef == nil {
		var ret SCMReference
		return ret
	}
	return *o.SourceControlRef
}

// GetSourceControlRefOk returns a tuple with the SourceControlRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogStackListItem) GetSourceControlRefOk() (*SCMReference, bool) {
	if o == nil || o.SourceControlRef == nil {
		return nil, false
	}
	return o.SourceControlRef, true
}

// HasSourceControlRef returns a boolean if a field has been set.
func (o *CatalogStackListItem) HasSourceControlRef() bool {
	if o != nil && o.SourceControlRef != nil {
		return true
	}

	return false
}

// SetSourceControlRef gets a reference to the given SCMReference and assigns it to the SourceControlRef field.
func (o *CatalogStackListItem) SetSourceControlRef(v SCMReference) {
	o.SourceControlRef = &v
}

func (o CatalogStackListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.ShortDescription != nil {
		toSerialize["short_description"] = o.ShortDescription
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.SourceControlRef != nil {
		toSerialize["source_control_ref"] = o.SourceControlRef
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogStackListItem struct {
	value *CatalogStackListItem
	isSet bool
}

func (v NullableCatalogStackListItem) Get() *CatalogStackListItem {
	return v.value
}

func (v *NullableCatalogStackListItem) Set(val *CatalogStackListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogStackListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogStackListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogStackListItem(val *CatalogStackListItem) *NullableCatalogStackListItem {
	return &NullableCatalogStackListItem{value: val, isSet: true}
}

func (v NullableCatalogStackListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogStackListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


