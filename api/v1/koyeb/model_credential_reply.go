/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// CredentialReply struct for CredentialReply
type CredentialReply struct {
	Credential *Credential `json:"credential,omitempty"`
}

// NewCredentialReply instantiates a new CredentialReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCredentialReply() *CredentialReply {
	this := CredentialReply{}
	return &this
}

// NewCredentialReplyWithDefaults instantiates a new CredentialReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCredentialReplyWithDefaults() *CredentialReply {
	this := CredentialReply{}
	return &this
}

// GetCredential returns the Credential field value if set, zero value otherwise.
func (o *CredentialReply) GetCredential() Credential {
	if o == nil || o.Credential == nil {
		var ret Credential
		return ret
	}
	return *o.Credential
}

// GetCredentialOk returns a tuple with the Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CredentialReply) GetCredentialOk() (*Credential, bool) {
	if o == nil || o.Credential == nil {
		return nil, false
	}
	return o.Credential, true
}

// HasCredential returns a boolean if a field has been set.
func (o *CredentialReply) HasCredential() bool {
	if o != nil && o.Credential != nil {
		return true
	}

	return false
}

// SetCredential gets a reference to the given Credential and assigns it to the Credential field.
func (o *CredentialReply) SetCredential(v Credential) {
	o.Credential = &v
}

func (o CredentialReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Credential != nil {
		toSerialize["credential"] = o.Credential
	}
	return json.Marshal(toSerialize)
}

type NullableCredentialReply struct {
	value *CredentialReply
	isSet bool
}

func (v NullableCredentialReply) Get() *CredentialReply {
	return v.value
}

func (v *NullableCredentialReply) Set(val *CredentialReply) {
	v.value = val
	v.isSet = true
}

func (v NullableCredentialReply) IsSet() bool {
	return v.isSet
}

func (v *NullableCredentialReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCredentialReply(val *CredentialReply) *NullableCredentialReply {
	return &NullableCredentialReply{value: val, isSet: true}
}

func (v NullableCredentialReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCredentialReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


