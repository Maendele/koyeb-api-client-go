/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// SetupReply struct for SetupReply
type SetupReply struct {
	ClientSecret *string `json:"client_secret,omitempty"`
}

// NewSetupReply instantiates a new SetupReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetupReply() *SetupReply {
	this := SetupReply{}
	return &this
}

// NewSetupReplyWithDefaults instantiates a new SetupReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetupReplyWithDefaults() *SetupReply {
	this := SetupReply{}
	return &this
}

// GetClientSecret returns the ClientSecret field value if set, zero value otherwise.
func (o *SetupReply) GetClientSecret() string {
	if o == nil || o.ClientSecret == nil {
		var ret string
		return ret
	}
	return *o.ClientSecret
}

// GetClientSecretOk returns a tuple with the ClientSecret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SetupReply) GetClientSecretOk() (*string, bool) {
	if o == nil || o.ClientSecret == nil {
		return nil, false
	}
	return o.ClientSecret, true
}

// HasClientSecret returns a boolean if a field has been set.
func (o *SetupReply) HasClientSecret() bool {
	if o != nil && o.ClientSecret != nil {
		return true
	}

	return false
}

// SetClientSecret gets a reference to the given string and assigns it to the ClientSecret field.
func (o *SetupReply) SetClientSecret(v string) {
	o.ClientSecret = &v
}

func (o SetupReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientSecret != nil {
		toSerialize["client_secret"] = o.ClientSecret
	}
	return json.Marshal(toSerialize)
}

type NullableSetupReply struct {
	value *SetupReply
	isSet bool
}

func (v NullableSetupReply) Get() *SetupReply {
	return v.value
}

func (v *NullableSetupReply) Set(val *SetupReply) {
	v.value = val
	v.isSet = true
}

func (v NullableSetupReply) IsSet() bool {
	return v.isSet
}

func (v *NullableSetupReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetupReply(val *SetupReply) *NullableSetupReply {
	return &NullableSetupReply{value: val, isSet: true}
}

func (v NullableSetupReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetupReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


