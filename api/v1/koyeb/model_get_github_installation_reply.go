/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetGithubInstallationReply struct for GetGithubInstallationReply
type GetGithubInstallationReply struct {
	InstallationId *string `json:"installation_id,omitempty"`
	InstallationUrl *string `json:"installation_url,omitempty"`
}

// NewGetGithubInstallationReply instantiates a new GetGithubInstallationReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetGithubInstallationReply() *GetGithubInstallationReply {
	this := GetGithubInstallationReply{}
	return &this
}

// NewGetGithubInstallationReplyWithDefaults instantiates a new GetGithubInstallationReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetGithubInstallationReplyWithDefaults() *GetGithubInstallationReply {
	this := GetGithubInstallationReply{}
	return &this
}

// GetInstallationId returns the InstallationId field value if set, zero value otherwise.
func (o *GetGithubInstallationReply) GetInstallationId() string {
	if o == nil || o.InstallationId == nil {
		var ret string
		return ret
	}
	return *o.InstallationId
}

// GetInstallationIdOk returns a tuple with the InstallationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGithubInstallationReply) GetInstallationIdOk() (*string, bool) {
	if o == nil || o.InstallationId == nil {
		return nil, false
	}
	return o.InstallationId, true
}

// HasInstallationId returns a boolean if a field has been set.
func (o *GetGithubInstallationReply) HasInstallationId() bool {
	if o != nil && o.InstallationId != nil {
		return true
	}

	return false
}

// SetInstallationId gets a reference to the given string and assigns it to the InstallationId field.
func (o *GetGithubInstallationReply) SetInstallationId(v string) {
	o.InstallationId = &v
}

// GetInstallationUrl returns the InstallationUrl field value if set, zero value otherwise.
func (o *GetGithubInstallationReply) GetInstallationUrl() string {
	if o == nil || o.InstallationUrl == nil {
		var ret string
		return ret
	}
	return *o.InstallationUrl
}

// GetInstallationUrlOk returns a tuple with the InstallationUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetGithubInstallationReply) GetInstallationUrlOk() (*string, bool) {
	if o == nil || o.InstallationUrl == nil {
		return nil, false
	}
	return o.InstallationUrl, true
}

// HasInstallationUrl returns a boolean if a field has been set.
func (o *GetGithubInstallationReply) HasInstallationUrl() bool {
	if o != nil && o.InstallationUrl != nil {
		return true
	}

	return false
}

// SetInstallationUrl gets a reference to the given string and assigns it to the InstallationUrl field.
func (o *GetGithubInstallationReply) SetInstallationUrl(v string) {
	o.InstallationUrl = &v
}

func (o GetGithubInstallationReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.InstallationId != nil {
		toSerialize["installation_id"] = o.InstallationId
	}
	if o.InstallationUrl != nil {
		toSerialize["installation_url"] = o.InstallationUrl
	}
	return json.Marshal(toSerialize)
}

type NullableGetGithubInstallationReply struct {
	value *GetGithubInstallationReply
	isSet bool
}

func (v NullableGetGithubInstallationReply) Get() *GetGithubInstallationReply {
	return v.value
}

func (v *NullableGetGithubInstallationReply) Set(val *GetGithubInstallationReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetGithubInstallationReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetGithubInstallationReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetGithubInstallationReply(val *GetGithubInstallationReply) *NullableGetGithubInstallationReply {
	return &NullableGetGithubInstallationReply{value: val, isSet: true}
}

func (v NullableGetGithubInstallationReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetGithubInstallationReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


