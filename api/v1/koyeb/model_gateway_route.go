/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GatewayRoute struct for GatewayRoute
type GatewayRoute struct {
	Path *string `json:"path,omitempty"`
	DeploymentGroup *string `json:"deployment_group,omitempty"`
	RevisionId *string `json:"revision_id,omitempty"`
	ServiceId *string `json:"service_id,omitempty"`
	Port *int64 `json:"port,omitempty"`
	Datacenters *[]string `json:"datacenters,omitempty"`
}

// NewGatewayRoute instantiates a new GatewayRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGatewayRoute() *GatewayRoute {
	this := GatewayRoute{}
	return &this
}

// NewGatewayRouteWithDefaults instantiates a new GatewayRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGatewayRouteWithDefaults() *GatewayRoute {
	this := GatewayRoute{}
	return &this
}

// GetPath returns the Path field value if set, zero value otherwise.
func (o *GatewayRoute) GetPath() string {
	if o == nil || o.Path == nil {
		var ret string
		return ret
	}
	return *o.Path
}

// GetPathOk returns a tuple with the Path field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetPathOk() (*string, bool) {
	if o == nil || o.Path == nil {
		return nil, false
	}
	return o.Path, true
}

// HasPath returns a boolean if a field has been set.
func (o *GatewayRoute) HasPath() bool {
	if o != nil && o.Path != nil {
		return true
	}

	return false
}

// SetPath gets a reference to the given string and assigns it to the Path field.
func (o *GatewayRoute) SetPath(v string) {
	o.Path = &v
}

// GetDeploymentGroup returns the DeploymentGroup field value if set, zero value otherwise.
func (o *GatewayRoute) GetDeploymentGroup() string {
	if o == nil || o.DeploymentGroup == nil {
		var ret string
		return ret
	}
	return *o.DeploymentGroup
}

// GetDeploymentGroupOk returns a tuple with the DeploymentGroup field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetDeploymentGroupOk() (*string, bool) {
	if o == nil || o.DeploymentGroup == nil {
		return nil, false
	}
	return o.DeploymentGroup, true
}

// HasDeploymentGroup returns a boolean if a field has been set.
func (o *GatewayRoute) HasDeploymentGroup() bool {
	if o != nil && o.DeploymentGroup != nil {
		return true
	}

	return false
}

// SetDeploymentGroup gets a reference to the given string and assigns it to the DeploymentGroup field.
func (o *GatewayRoute) SetDeploymentGroup(v string) {
	o.DeploymentGroup = &v
}

// GetRevisionId returns the RevisionId field value if set, zero value otherwise.
func (o *GatewayRoute) GetRevisionId() string {
	if o == nil || o.RevisionId == nil {
		var ret string
		return ret
	}
	return *o.RevisionId
}

// GetRevisionIdOk returns a tuple with the RevisionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetRevisionIdOk() (*string, bool) {
	if o == nil || o.RevisionId == nil {
		return nil, false
	}
	return o.RevisionId, true
}

// HasRevisionId returns a boolean if a field has been set.
func (o *GatewayRoute) HasRevisionId() bool {
	if o != nil && o.RevisionId != nil {
		return true
	}

	return false
}

// SetRevisionId gets a reference to the given string and assigns it to the RevisionId field.
func (o *GatewayRoute) SetRevisionId(v string) {
	o.RevisionId = &v
}

// GetServiceId returns the ServiceId field value if set, zero value otherwise.
func (o *GatewayRoute) GetServiceId() string {
	if o == nil || o.ServiceId == nil {
		var ret string
		return ret
	}
	return *o.ServiceId
}

// GetServiceIdOk returns a tuple with the ServiceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetServiceIdOk() (*string, bool) {
	if o == nil || o.ServiceId == nil {
		return nil, false
	}
	return o.ServiceId, true
}

// HasServiceId returns a boolean if a field has been set.
func (o *GatewayRoute) HasServiceId() bool {
	if o != nil && o.ServiceId != nil {
		return true
	}

	return false
}

// SetServiceId gets a reference to the given string and assigns it to the ServiceId field.
func (o *GatewayRoute) SetServiceId(v string) {
	o.ServiceId = &v
}

// GetPort returns the Port field value if set, zero value otherwise.
func (o *GatewayRoute) GetPort() int64 {
	if o == nil || o.Port == nil {
		var ret int64
		return ret
	}
	return *o.Port
}

// GetPortOk returns a tuple with the Port field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetPortOk() (*int64, bool) {
	if o == nil || o.Port == nil {
		return nil, false
	}
	return o.Port, true
}

// HasPort returns a boolean if a field has been set.
func (o *GatewayRoute) HasPort() bool {
	if o != nil && o.Port != nil {
		return true
	}

	return false
}

// SetPort gets a reference to the given int64 and assigns it to the Port field.
func (o *GatewayRoute) SetPort(v int64) {
	o.Port = &v
}

// GetDatacenters returns the Datacenters field value if set, zero value otherwise.
func (o *GatewayRoute) GetDatacenters() []string {
	if o == nil || o.Datacenters == nil {
		var ret []string
		return ret
	}
	return *o.Datacenters
}

// GetDatacentersOk returns a tuple with the Datacenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GatewayRoute) GetDatacentersOk() (*[]string, bool) {
	if o == nil || o.Datacenters == nil {
		return nil, false
	}
	return o.Datacenters, true
}

// HasDatacenters returns a boolean if a field has been set.
func (o *GatewayRoute) HasDatacenters() bool {
	if o != nil && o.Datacenters != nil {
		return true
	}

	return false
}

// SetDatacenters gets a reference to the given []string and assigns it to the Datacenters field.
func (o *GatewayRoute) SetDatacenters(v []string) {
	o.Datacenters = &v
}

func (o GatewayRoute) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Path != nil {
		toSerialize["path"] = o.Path
	}
	if o.DeploymentGroup != nil {
		toSerialize["deployment_group"] = o.DeploymentGroup
	}
	if o.RevisionId != nil {
		toSerialize["revision_id"] = o.RevisionId
	}
	if o.ServiceId != nil {
		toSerialize["service_id"] = o.ServiceId
	}
	if o.Port != nil {
		toSerialize["port"] = o.Port
	}
	if o.Datacenters != nil {
		toSerialize["datacenters"] = o.Datacenters
	}
	return json.Marshal(toSerialize)
}

type NullableGatewayRoute struct {
	value *GatewayRoute
	isSet bool
}

func (v NullableGatewayRoute) Get() *GatewayRoute {
	return v.value
}

func (v *NullableGatewayRoute) Set(val *GatewayRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayRoute(val *GatewayRoute) *NullableGatewayRoute {
	return &NullableGatewayRoute{value: val, isSet: true}
}

func (v NullableGatewayRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


