/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// GetInternalAppReply struct for GetInternalAppReply
type GetInternalAppReply struct {
	App *App `json:"app,omitempty"`
}

// NewGetInternalAppReply instantiates a new GetInternalAppReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetInternalAppReply() *GetInternalAppReply {
	this := GetInternalAppReply{}
	return &this
}

// NewGetInternalAppReplyWithDefaults instantiates a new GetInternalAppReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetInternalAppReplyWithDefaults() *GetInternalAppReply {
	this := GetInternalAppReply{}
	return &this
}

// GetApp returns the App field value if set, zero value otherwise.
func (o *GetInternalAppReply) GetApp() App {
	if o == nil || o.App == nil {
		var ret App
		return ret
	}
	return *o.App
}

// GetAppOk returns a tuple with the App field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetInternalAppReply) GetAppOk() (*App, bool) {
	if o == nil || o.App == nil {
		return nil, false
	}
	return o.App, true
}

// HasApp returns a boolean if a field has been set.
func (o *GetInternalAppReply) HasApp() bool {
	if o != nil && o.App != nil {
		return true
	}

	return false
}

// SetApp gets a reference to the given App and assigns it to the App field.
func (o *GetInternalAppReply) SetApp(v App) {
	o.App = &v
}

func (o GetInternalAppReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.App != nil {
		toSerialize["app"] = o.App
	}
	return json.Marshal(toSerialize)
}

type NullableGetInternalAppReply struct {
	value *GetInternalAppReply
	isSet bool
}

func (v NullableGetInternalAppReply) Get() *GetInternalAppReply {
	return v.value
}

func (v *NullableGetInternalAppReply) Set(val *GetInternalAppReply) {
	v.value = val
	v.isSet = true
}

func (v NullableGetInternalAppReply) IsSet() bool {
	return v.isSet
}

func (v *NullableGetInternalAppReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetInternalAppReply(val *GetInternalAppReply) *NullableGetInternalAppReply {
	return &NullableGetInternalAppReply{value: val, isSet: true}
}

func (v NullableGetInternalAppReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetInternalAppReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


