/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
	"time"
)

// StackListItem A smaller representation of a stack to use when listing entities.
type StackListItem struct {
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	LatestRevisionSha *string `json:"latest_revision_sha,omitempty"`
	DeployedRevisionSha *string `json:"deployed_revision_sha,omitempty"`
	Status *StackStatus `json:"status,omitempty"`
	Repository *SCMRepository `json:"repository,omitempty"`
	UpdatedAt *time.Time `json:"updated_at,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	OrganizationId *string `json:"organization_id,omitempty"`
}

// NewStackListItem instantiates a new StackListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStackListItem() *StackListItem {
	this := StackListItem{}
	var status StackStatus = STACKSTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// NewStackListItemWithDefaults instantiates a new StackListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStackListItemWithDefaults() *StackListItem {
	this := StackListItem{}
	var status StackStatus = STACKSTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *StackListItem) GetId() string {
	if o == nil || o.Id == nil {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetIdOk() (*string, bool) {
	if o == nil || o.Id == nil {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *StackListItem) HasId() bool {
	if o != nil && o.Id != nil {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *StackListItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *StackListItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *StackListItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *StackListItem) SetName(v string) {
	o.Name = &v
}

// GetLatestRevisionSha returns the LatestRevisionSha field value if set, zero value otherwise.
func (o *StackListItem) GetLatestRevisionSha() string {
	if o == nil || o.LatestRevisionSha == nil {
		var ret string
		return ret
	}
	return *o.LatestRevisionSha
}

// GetLatestRevisionShaOk returns a tuple with the LatestRevisionSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetLatestRevisionShaOk() (*string, bool) {
	if o == nil || o.LatestRevisionSha == nil {
		return nil, false
	}
	return o.LatestRevisionSha, true
}

// HasLatestRevisionSha returns a boolean if a field has been set.
func (o *StackListItem) HasLatestRevisionSha() bool {
	if o != nil && o.LatestRevisionSha != nil {
		return true
	}

	return false
}

// SetLatestRevisionSha gets a reference to the given string and assigns it to the LatestRevisionSha field.
func (o *StackListItem) SetLatestRevisionSha(v string) {
	o.LatestRevisionSha = &v
}

// GetDeployedRevisionSha returns the DeployedRevisionSha field value if set, zero value otherwise.
func (o *StackListItem) GetDeployedRevisionSha() string {
	if o == nil || o.DeployedRevisionSha == nil {
		var ret string
		return ret
	}
	return *o.DeployedRevisionSha
}

// GetDeployedRevisionShaOk returns a tuple with the DeployedRevisionSha field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetDeployedRevisionShaOk() (*string, bool) {
	if o == nil || o.DeployedRevisionSha == nil {
		return nil, false
	}
	return o.DeployedRevisionSha, true
}

// HasDeployedRevisionSha returns a boolean if a field has been set.
func (o *StackListItem) HasDeployedRevisionSha() bool {
	if o != nil && o.DeployedRevisionSha != nil {
		return true
	}

	return false
}

// SetDeployedRevisionSha gets a reference to the given string and assigns it to the DeployedRevisionSha field.
func (o *StackListItem) SetDeployedRevisionSha(v string) {
	o.DeployedRevisionSha = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *StackListItem) GetStatus() StackStatus {
	if o == nil || o.Status == nil {
		var ret StackStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetStatusOk() (*StackStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *StackListItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given StackStatus and assigns it to the Status field.
func (o *StackListItem) SetStatus(v StackStatus) {
	o.Status = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *StackListItem) GetRepository() SCMRepository {
	if o == nil || o.Repository == nil {
		var ret SCMRepository
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetRepositoryOk() (*SCMRepository, bool) {
	if o == nil || o.Repository == nil {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *StackListItem) HasRepository() bool {
	if o != nil && o.Repository != nil {
		return true
	}

	return false
}

// SetRepository gets a reference to the given SCMRepository and assigns it to the Repository field.
func (o *StackListItem) SetRepository(v SCMRepository) {
	o.Repository = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *StackListItem) GetUpdatedAt() time.Time {
	if o == nil || o.UpdatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || o.UpdatedAt == nil {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *StackListItem) HasUpdatedAt() bool {
	if o != nil && o.UpdatedAt != nil {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *StackListItem) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *StackListItem) GetCreatedAt() time.Time {
	if o == nil || o.CreatedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || o.CreatedAt == nil {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *StackListItem) HasCreatedAt() bool {
	if o != nil && o.CreatedAt != nil {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *StackListItem) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetOrganizationId returns the OrganizationId field value if set, zero value otherwise.
func (o *StackListItem) GetOrganizationId() string {
	if o == nil || o.OrganizationId == nil {
		var ret string
		return ret
	}
	return *o.OrganizationId
}

// GetOrganizationIdOk returns a tuple with the OrganizationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StackListItem) GetOrganizationIdOk() (*string, bool) {
	if o == nil || o.OrganizationId == nil {
		return nil, false
	}
	return o.OrganizationId, true
}

// HasOrganizationId returns a boolean if a field has been set.
func (o *StackListItem) HasOrganizationId() bool {
	if o != nil && o.OrganizationId != nil {
		return true
	}

	return false
}

// SetOrganizationId gets a reference to the given string and assigns it to the OrganizationId field.
func (o *StackListItem) SetOrganizationId(v string) {
	o.OrganizationId = &v
}

func (o StackListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Id != nil {
		toSerialize["id"] = o.Id
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.LatestRevisionSha != nil {
		toSerialize["latest_revision_sha"] = o.LatestRevisionSha
	}
	if o.DeployedRevisionSha != nil {
		toSerialize["deployed_revision_sha"] = o.DeployedRevisionSha
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Repository != nil {
		toSerialize["repository"] = o.Repository
	}
	if o.UpdatedAt != nil {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	if o.CreatedAt != nil {
		toSerialize["created_at"] = o.CreatedAt
	}
	if o.OrganizationId != nil {
		toSerialize["organization_id"] = o.OrganizationId
	}
	return json.Marshal(toSerialize)
}

type NullableStackListItem struct {
	value *StackListItem
	isSet bool
}

func (v NullableStackListItem) Get() *StackListItem {
	return v.value
}

func (v *NullableStackListItem) Set(val *StackListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableStackListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableStackListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStackListItem(val *StackListItem) *NullableStackListItem {
	return &NullableStackListItem{value: val, isSet: true}
}

func (v NullableStackListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStackListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


