/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// CatalogFunctionListItem struct for CatalogFunctionListItem
type CatalogFunctionListItem struct {
	Name *string `json:"name,omitempty"`
	DisplayName *string `json:"display_name,omitempty"`
	ShortDescription *string `json:"short_description,omitempty"`
	Icon *string `json:"icon,omitempty"`
	Website *string `json:"website,omitempty"`
	Status *BaseCatalogStatus `json:"status,omitempty"`
	Tags *[]string `json:"tags,omitempty"`
	Version *string `json:"version,omitempty"`
	Image *string `json:"image,omitempty"`
	Parameters *[]FunctionParameter `json:"parameters,omitempty"`
}

// NewCatalogFunctionListItem instantiates a new CatalogFunctionListItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCatalogFunctionListItem() *CatalogFunctionListItem {
	this := CatalogFunctionListItem{}
	var status BaseCatalogStatus = BASECATALOGSTATUS_COMING_SOON
	this.Status = &status
	return &this
}

// NewCatalogFunctionListItemWithDefaults instantiates a new CatalogFunctionListItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCatalogFunctionListItemWithDefaults() *CatalogFunctionListItem {
	this := CatalogFunctionListItem{}
	var status BaseCatalogStatus = BASECATALOGSTATUS_COMING_SOON
	this.Status = &status
	return &this
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CatalogFunctionListItem) SetName(v string) {
	o.Name = &v
}

// GetDisplayName returns the DisplayName field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetDisplayName() string {
	if o == nil || o.DisplayName == nil {
		var ret string
		return ret
	}
	return *o.DisplayName
}

// GetDisplayNameOk returns a tuple with the DisplayName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetDisplayNameOk() (*string, bool) {
	if o == nil || o.DisplayName == nil {
		return nil, false
	}
	return o.DisplayName, true
}

// HasDisplayName returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasDisplayName() bool {
	if o != nil && o.DisplayName != nil {
		return true
	}

	return false
}

// SetDisplayName gets a reference to the given string and assigns it to the DisplayName field.
func (o *CatalogFunctionListItem) SetDisplayName(v string) {
	o.DisplayName = &v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetShortDescription() string {
	if o == nil || o.ShortDescription == nil {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetShortDescriptionOk() (*string, bool) {
	if o == nil || o.ShortDescription == nil {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasShortDescription() bool {
	if o != nil && o.ShortDescription != nil {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *CatalogFunctionListItem) SetShortDescription(v string) {
	o.ShortDescription = &v
}

// GetIcon returns the Icon field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetIcon() string {
	if o == nil || o.Icon == nil {
		var ret string
		return ret
	}
	return *o.Icon
}

// GetIconOk returns a tuple with the Icon field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetIconOk() (*string, bool) {
	if o == nil || o.Icon == nil {
		return nil, false
	}
	return o.Icon, true
}

// HasIcon returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasIcon() bool {
	if o != nil && o.Icon != nil {
		return true
	}

	return false
}

// SetIcon gets a reference to the given string and assigns it to the Icon field.
func (o *CatalogFunctionListItem) SetIcon(v string) {
	o.Icon = &v
}

// GetWebsite returns the Website field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetWebsite() string {
	if o == nil || o.Website == nil {
		var ret string
		return ret
	}
	return *o.Website
}

// GetWebsiteOk returns a tuple with the Website field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetWebsiteOk() (*string, bool) {
	if o == nil || o.Website == nil {
		return nil, false
	}
	return o.Website, true
}

// HasWebsite returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasWebsite() bool {
	if o != nil && o.Website != nil {
		return true
	}

	return false
}

// SetWebsite gets a reference to the given string and assigns it to the Website field.
func (o *CatalogFunctionListItem) SetWebsite(v string) {
	o.Website = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetStatus() BaseCatalogStatus {
	if o == nil || o.Status == nil {
		var ret BaseCatalogStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetStatusOk() (*BaseCatalogStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BaseCatalogStatus and assigns it to the Status field.
func (o *CatalogFunctionListItem) SetStatus(v BaseCatalogStatus) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetTags() []string {
	if o == nil || o.Tags == nil {
		var ret []string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetTagsOk() (*[]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *CatalogFunctionListItem) SetTags(v []string) {
	o.Tags = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetVersion() string {
	if o == nil || o.Version == nil {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetVersionOk() (*string, bool) {
	if o == nil || o.Version == nil {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasVersion() bool {
	if o != nil && o.Version != nil {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *CatalogFunctionListItem) SetVersion(v string) {
	o.Version = &v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *CatalogFunctionListItem) SetImage(v string) {
	o.Image = &v
}

// GetParameters returns the Parameters field value if set, zero value otherwise.
func (o *CatalogFunctionListItem) GetParameters() []FunctionParameter {
	if o == nil || o.Parameters == nil {
		var ret []FunctionParameter
		return ret
	}
	return *o.Parameters
}

// GetParametersOk returns a tuple with the Parameters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CatalogFunctionListItem) GetParametersOk() (*[]FunctionParameter, bool) {
	if o == nil || o.Parameters == nil {
		return nil, false
	}
	return o.Parameters, true
}

// HasParameters returns a boolean if a field has been set.
func (o *CatalogFunctionListItem) HasParameters() bool {
	if o != nil && o.Parameters != nil {
		return true
	}

	return false
}

// SetParameters gets a reference to the given []FunctionParameter and assigns it to the Parameters field.
func (o *CatalogFunctionListItem) SetParameters(v []FunctionParameter) {
	o.Parameters = &v
}

func (o CatalogFunctionListItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.DisplayName != nil {
		toSerialize["display_name"] = o.DisplayName
	}
	if o.ShortDescription != nil {
		toSerialize["short_description"] = o.ShortDescription
	}
	if o.Icon != nil {
		toSerialize["icon"] = o.Icon
	}
	if o.Website != nil {
		toSerialize["website"] = o.Website
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Version != nil {
		toSerialize["version"] = o.Version
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.Parameters != nil {
		toSerialize["parameters"] = o.Parameters
	}
	return json.Marshal(toSerialize)
}

type NullableCatalogFunctionListItem struct {
	value *CatalogFunctionListItem
	isSet bool
}

func (v NullableCatalogFunctionListItem) Get() *CatalogFunctionListItem {
	return v.value
}

func (v *NullableCatalogFunctionListItem) Set(val *CatalogFunctionListItem) {
	v.value = val
	v.isSet = true
}

func (v NullableCatalogFunctionListItem) IsSet() bool {
	return v.isSet
}

func (v *NullableCatalogFunctionListItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCatalogFunctionListItem(val *CatalogFunctionListItem) *NullableCatalogFunctionListItem {
	return &NullableCatalogFunctionListItem{value: val, isSet: true}
}

func (v NullableCatalogFunctionListItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCatalogFunctionListItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


