/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ListInternalServicesReply struct for ListInternalServicesReply
type ListInternalServicesReply struct {
	Ids *[]string `json:"ids,omitempty"`
	ServiceIds *[]ServiceId `json:"service_ids,omitempty"`
}

// NewListInternalServicesReply instantiates a new ListInternalServicesReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListInternalServicesReply() *ListInternalServicesReply {
	this := ListInternalServicesReply{}
	return &this
}

// NewListInternalServicesReplyWithDefaults instantiates a new ListInternalServicesReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListInternalServicesReplyWithDefaults() *ListInternalServicesReply {
	this := ListInternalServicesReply{}
	return &this
}

// GetIds returns the Ids field value if set, zero value otherwise.
func (o *ListInternalServicesReply) GetIds() []string {
	if o == nil || o.Ids == nil {
		var ret []string
		return ret
	}
	return *o.Ids
}

// GetIdsOk returns a tuple with the Ids field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInternalServicesReply) GetIdsOk() (*[]string, bool) {
	if o == nil || o.Ids == nil {
		return nil, false
	}
	return o.Ids, true
}

// HasIds returns a boolean if a field has been set.
func (o *ListInternalServicesReply) HasIds() bool {
	if o != nil && o.Ids != nil {
		return true
	}

	return false
}

// SetIds gets a reference to the given []string and assigns it to the Ids field.
func (o *ListInternalServicesReply) SetIds(v []string) {
	o.Ids = &v
}

// GetServiceIds returns the ServiceIds field value if set, zero value otherwise.
func (o *ListInternalServicesReply) GetServiceIds() []ServiceId {
	if o == nil || o.ServiceIds == nil {
		var ret []ServiceId
		return ret
	}
	return *o.ServiceIds
}

// GetServiceIdsOk returns a tuple with the ServiceIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListInternalServicesReply) GetServiceIdsOk() (*[]ServiceId, bool) {
	if o == nil || o.ServiceIds == nil {
		return nil, false
	}
	return o.ServiceIds, true
}

// HasServiceIds returns a boolean if a field has been set.
func (o *ListInternalServicesReply) HasServiceIds() bool {
	if o != nil && o.ServiceIds != nil {
		return true
	}

	return false
}

// SetServiceIds gets a reference to the given []ServiceId and assigns it to the ServiceIds field.
func (o *ListInternalServicesReply) SetServiceIds(v []ServiceId) {
	o.ServiceIds = &v
}

func (o ListInternalServicesReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Ids != nil {
		toSerialize["ids"] = o.Ids
	}
	if o.ServiceIds != nil {
		toSerialize["service_ids"] = o.ServiceIds
	}
	return json.Marshal(toSerialize)
}

type NullableListInternalServicesReply struct {
	value *ListInternalServicesReply
	isSet bool
}

func (v NullableListInternalServicesReply) Get() *ListInternalServicesReply {
	return v.value
}

func (v *NullableListInternalServicesReply) Set(val *ListInternalServicesReply) {
	v.value = val
	v.isSet = true
}

func (v NullableListInternalServicesReply) IsSet() bool {
	return v.isSet
}

func (v *NullableListInternalServicesReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListInternalServicesReply(val *ListInternalServicesReply) *NullableListInternalServicesReply {
	return &NullableListInternalServicesReply{value: val, isSet: true}
}

func (v NullableListInternalServicesReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListInternalServicesReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


