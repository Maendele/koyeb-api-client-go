/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// ServiceRevisionState struct for ServiceRevisionState
type ServiceRevisionState struct {
	Instances *[]ServiceInstance `json:"instances,omitempty"`
	Status *ServiceRevisionStateStatus `json:"status,omitempty"`
	StatusMessage *string `json:"status_message,omitempty"`
	Datacenters *[]string `json:"datacenters,omitempty"`
	BuildInfo *ServiceRevisionStateBuildInfo `json:"build_info,omitempty"`
}

// NewServiceRevisionState instantiates a new ServiceRevisionState object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServiceRevisionState() *ServiceRevisionState {
	this := ServiceRevisionState{}
	var status ServiceRevisionStateStatus = SERVICEREVISIONSTATESTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// NewServiceRevisionStateWithDefaults instantiates a new ServiceRevisionState object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServiceRevisionStateWithDefaults() *ServiceRevisionState {
	this := ServiceRevisionState{}
	var status ServiceRevisionStateStatus = SERVICEREVISIONSTATESTATUS_UNKNOWN
	this.Status = &status
	return &this
}

// GetInstances returns the Instances field value if set, zero value otherwise.
func (o *ServiceRevisionState) GetInstances() []ServiceInstance {
	if o == nil || o.Instances == nil {
		var ret []ServiceInstance
		return ret
	}
	return *o.Instances
}

// GetInstancesOk returns a tuple with the Instances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRevisionState) GetInstancesOk() (*[]ServiceInstance, bool) {
	if o == nil || o.Instances == nil {
		return nil, false
	}
	return o.Instances, true
}

// HasInstances returns a boolean if a field has been set.
func (o *ServiceRevisionState) HasInstances() bool {
	if o != nil && o.Instances != nil {
		return true
	}

	return false
}

// SetInstances gets a reference to the given []ServiceInstance and assigns it to the Instances field.
func (o *ServiceRevisionState) SetInstances(v []ServiceInstance) {
	o.Instances = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServiceRevisionState) GetStatus() ServiceRevisionStateStatus {
	if o == nil || o.Status == nil {
		var ret ServiceRevisionStateStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRevisionState) GetStatusOk() (*ServiceRevisionStateStatus, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServiceRevisionState) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ServiceRevisionStateStatus and assigns it to the Status field.
func (o *ServiceRevisionState) SetStatus(v ServiceRevisionStateStatus) {
	o.Status = &v
}

// GetStatusMessage returns the StatusMessage field value if set, zero value otherwise.
func (o *ServiceRevisionState) GetStatusMessage() string {
	if o == nil || o.StatusMessage == nil {
		var ret string
		return ret
	}
	return *o.StatusMessage
}

// GetStatusMessageOk returns a tuple with the StatusMessage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRevisionState) GetStatusMessageOk() (*string, bool) {
	if o == nil || o.StatusMessage == nil {
		return nil, false
	}
	return o.StatusMessage, true
}

// HasStatusMessage returns a boolean if a field has been set.
func (o *ServiceRevisionState) HasStatusMessage() bool {
	if o != nil && o.StatusMessage != nil {
		return true
	}

	return false
}

// SetStatusMessage gets a reference to the given string and assigns it to the StatusMessage field.
func (o *ServiceRevisionState) SetStatusMessage(v string) {
	o.StatusMessage = &v
}

// GetDatacenters returns the Datacenters field value if set, zero value otherwise.
func (o *ServiceRevisionState) GetDatacenters() []string {
	if o == nil || o.Datacenters == nil {
		var ret []string
		return ret
	}
	return *o.Datacenters
}

// GetDatacentersOk returns a tuple with the Datacenters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRevisionState) GetDatacentersOk() (*[]string, bool) {
	if o == nil || o.Datacenters == nil {
		return nil, false
	}
	return o.Datacenters, true
}

// HasDatacenters returns a boolean if a field has been set.
func (o *ServiceRevisionState) HasDatacenters() bool {
	if o != nil && o.Datacenters != nil {
		return true
	}

	return false
}

// SetDatacenters gets a reference to the given []string and assigns it to the Datacenters field.
func (o *ServiceRevisionState) SetDatacenters(v []string) {
	o.Datacenters = &v
}

// GetBuildInfo returns the BuildInfo field value if set, zero value otherwise.
func (o *ServiceRevisionState) GetBuildInfo() ServiceRevisionStateBuildInfo {
	if o == nil || o.BuildInfo == nil {
		var ret ServiceRevisionStateBuildInfo
		return ret
	}
	return *o.BuildInfo
}

// GetBuildInfoOk returns a tuple with the BuildInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServiceRevisionState) GetBuildInfoOk() (*ServiceRevisionStateBuildInfo, bool) {
	if o == nil || o.BuildInfo == nil {
		return nil, false
	}
	return o.BuildInfo, true
}

// HasBuildInfo returns a boolean if a field has been set.
func (o *ServiceRevisionState) HasBuildInfo() bool {
	if o != nil && o.BuildInfo != nil {
		return true
	}

	return false
}

// SetBuildInfo gets a reference to the given ServiceRevisionStateBuildInfo and assigns it to the BuildInfo field.
func (o *ServiceRevisionState) SetBuildInfo(v ServiceRevisionStateBuildInfo) {
	o.BuildInfo = &v
}

func (o ServiceRevisionState) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Instances != nil {
		toSerialize["instances"] = o.Instances
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.StatusMessage != nil {
		toSerialize["status_message"] = o.StatusMessage
	}
	if o.Datacenters != nil {
		toSerialize["datacenters"] = o.Datacenters
	}
	if o.BuildInfo != nil {
		toSerialize["build_info"] = o.BuildInfo
	}
	return json.Marshal(toSerialize)
}

type NullableServiceRevisionState struct {
	value *ServiceRevisionState
	isSet bool
}

func (v NullableServiceRevisionState) Get() *ServiceRevisionState {
	return v.value
}

func (v *NullableServiceRevisionState) Set(val *ServiceRevisionState) {
	v.value = val
	v.isSet = true
}

func (v NullableServiceRevisionState) IsSet() bool {
	return v.isSet
}

func (v *NullableServiceRevisionState) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServiceRevisionState(val *ServiceRevisionState) *NullableServiceRevisionState {
	return &NullableServiceRevisionState{value: val, isSet: true}
}

func (v NullableServiceRevisionState) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServiceRevisionState) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


