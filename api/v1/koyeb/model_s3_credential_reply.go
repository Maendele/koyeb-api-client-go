/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// S3CredentialReply struct for S3CredentialReply
type S3CredentialReply struct {
	S3Credential *S3Credential `json:"s3_credential,omitempty"`
}

// NewS3CredentialReply instantiates a new S3CredentialReply object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3CredentialReply() *S3CredentialReply {
	this := S3CredentialReply{}
	return &this
}

// NewS3CredentialReplyWithDefaults instantiates a new S3CredentialReply object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3CredentialReplyWithDefaults() *S3CredentialReply {
	this := S3CredentialReply{}
	return &this
}

// GetS3Credential returns the S3Credential field value if set, zero value otherwise.
func (o *S3CredentialReply) GetS3Credential() S3Credential {
	if o == nil || o.S3Credential == nil {
		var ret S3Credential
		return ret
	}
	return *o.S3Credential
}

// GetS3CredentialOk returns a tuple with the S3Credential field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *S3CredentialReply) GetS3CredentialOk() (*S3Credential, bool) {
	if o == nil || o.S3Credential == nil {
		return nil, false
	}
	return o.S3Credential, true
}

// HasS3Credential returns a boolean if a field has been set.
func (o *S3CredentialReply) HasS3Credential() bool {
	if o != nil && o.S3Credential != nil {
		return true
	}

	return false
}

// SetS3Credential gets a reference to the given S3Credential and assigns it to the S3Credential field.
func (o *S3CredentialReply) SetS3Credential(v S3Credential) {
	o.S3Credential = &v
}

func (o S3CredentialReply) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.S3Credential != nil {
		toSerialize["s3_credential"] = o.S3Credential
	}
	return json.Marshal(toSerialize)
}

type NullableS3CredentialReply struct {
	value *S3CredentialReply
	isSet bool
}

func (v NullableS3CredentialReply) Get() *S3CredentialReply {
	return v.value
}

func (v *NullableS3CredentialReply) Set(val *S3CredentialReply) {
	v.value = val
	v.isSet = true
}

func (v NullableS3CredentialReply) IsSet() bool {
	return v.isSet
}

func (v *NullableS3CredentialReply) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3CredentialReply(val *S3CredentialReply) *NullableS3CredentialReply {
	return &NullableS3CredentialReply{value: val, isSet: true}
}

func (v NullableS3CredentialReply) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3CredentialReply) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


