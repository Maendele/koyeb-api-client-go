/*
 * Koyeb Rest API
 *
 * The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 
 *
 * API version: 1.0.0
 */

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// CreateStackRevisionRequest struct for CreateStackRevisionRequest
type CreateStackRevisionRequest struct {
	StackId *string `json:"stack_id,omitempty"`
	Yaml *interface{} `json:"yaml,omitempty"`
	Message *string `json:"message,omitempty"`
}

// NewCreateStackRevisionRequest instantiates a new CreateStackRevisionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStackRevisionRequest() *CreateStackRevisionRequest {
	this := CreateStackRevisionRequest{}
	return &this
}

// NewCreateStackRevisionRequestWithDefaults instantiates a new CreateStackRevisionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStackRevisionRequestWithDefaults() *CreateStackRevisionRequest {
	this := CreateStackRevisionRequest{}
	return &this
}

// GetStackId returns the StackId field value if set, zero value otherwise.
func (o *CreateStackRevisionRequest) GetStackId() string {
	if o == nil || o.StackId == nil {
		var ret string
		return ret
	}
	return *o.StackId
}

// GetStackIdOk returns a tuple with the StackId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStackRevisionRequest) GetStackIdOk() (*string, bool) {
	if o == nil || o.StackId == nil {
		return nil, false
	}
	return o.StackId, true
}

// HasStackId returns a boolean if a field has been set.
func (o *CreateStackRevisionRequest) HasStackId() bool {
	if o != nil && o.StackId != nil {
		return true
	}

	return false
}

// SetStackId gets a reference to the given string and assigns it to the StackId field.
func (o *CreateStackRevisionRequest) SetStackId(v string) {
	o.StackId = &v
}

// GetYaml returns the Yaml field value if set, zero value otherwise.
func (o *CreateStackRevisionRequest) GetYaml() interface{} {
	if o == nil || o.Yaml == nil {
		var ret interface{}
		return ret
	}
	return *o.Yaml
}

// GetYamlOk returns a tuple with the Yaml field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStackRevisionRequest) GetYamlOk() (*interface{}, bool) {
	if o == nil || o.Yaml == nil {
		return nil, false
	}
	return o.Yaml, true
}

// HasYaml returns a boolean if a field has been set.
func (o *CreateStackRevisionRequest) HasYaml() bool {
	if o != nil && o.Yaml != nil {
		return true
	}

	return false
}

// SetYaml gets a reference to the given interface{} and assigns it to the Yaml field.
func (o *CreateStackRevisionRequest) SetYaml(v interface{}) {
	o.Yaml = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *CreateStackRevisionRequest) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStackRevisionRequest) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *CreateStackRevisionRequest) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *CreateStackRevisionRequest) SetMessage(v string) {
	o.Message = &v
}

func (o CreateStackRevisionRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.StackId != nil {
		toSerialize["stack_id"] = o.StackId
	}
	if o.Yaml != nil {
		toSerialize["yaml"] = o.Yaml
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	return json.Marshal(toSerialize)
}

type NullableCreateStackRevisionRequest struct {
	value *CreateStackRevisionRequest
	isSet bool
}

func (v NullableCreateStackRevisionRequest) Get() *CreateStackRevisionRequest {
	return v.value
}

func (v *NullableCreateStackRevisionRequest) Set(val *CreateStackRevisionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStackRevisionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStackRevisionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStackRevisionRequest(val *CreateStackRevisionRequest) *NullableCreateStackRevisionRequest {
	return &NullableCreateStackRevisionRequest{value: val, isSet: true}
}

func (v NullableCreateStackRevisionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStackRevisionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


