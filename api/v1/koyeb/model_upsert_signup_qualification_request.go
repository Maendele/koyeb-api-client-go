/*
Koyeb Rest API

The Koyeb API allows you to interact with the Koyeb platform in a simple, programmatic way using conventional HTTP requests. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package koyeb

import (
	"encoding/json"
)

// UpsertSignupQualificationRequest struct for UpsertSignupQualificationRequest
type UpsertSignupQualificationRequest struct {
	SignupQualification map[string]interface{} `json:"signup_qualification,omitempty"`
}

// NewUpsertSignupQualificationRequest instantiates a new UpsertSignupQualificationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpsertSignupQualificationRequest() *UpsertSignupQualificationRequest {
	this := UpsertSignupQualificationRequest{}
	return &this
}

// NewUpsertSignupQualificationRequestWithDefaults instantiates a new UpsertSignupQualificationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpsertSignupQualificationRequestWithDefaults() *UpsertSignupQualificationRequest {
	this := UpsertSignupQualificationRequest{}
	return &this
}

// GetSignupQualification returns the SignupQualification field value if set, zero value otherwise.
func (o *UpsertSignupQualificationRequest) GetSignupQualification() map[string]interface{} {
	if o == nil || isNil(o.SignupQualification) {
		var ret map[string]interface{}
		return ret
	}
	return o.SignupQualification
}

// GetSignupQualificationOk returns a tuple with the SignupQualification field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpsertSignupQualificationRequest) GetSignupQualificationOk() (map[string]interface{}, bool) {
	if o == nil || isNil(o.SignupQualification) {
    return map[string]interface{}{}, false
	}
	return o.SignupQualification, true
}

// HasSignupQualification returns a boolean if a field has been set.
func (o *UpsertSignupQualificationRequest) HasSignupQualification() bool {
	if o != nil && !isNil(o.SignupQualification) {
		return true
	}

	return false
}

// SetSignupQualification gets a reference to the given map[string]interface{} and assigns it to the SignupQualification field.
func (o *UpsertSignupQualificationRequest) SetSignupQualification(v map[string]interface{}) {
	o.SignupQualification = v
}

func (o UpsertSignupQualificationRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if !isNil(o.SignupQualification) {
		toSerialize["signup_qualification"] = o.SignupQualification
	}
	return json.Marshal(toSerialize)
}

type NullableUpsertSignupQualificationRequest struct {
	value *UpsertSignupQualificationRequest
	isSet bool
}

func (v NullableUpsertSignupQualificationRequest) Get() *UpsertSignupQualificationRequest {
	return v.value
}

func (v *NullableUpsertSignupQualificationRequest) Set(val *UpsertSignupQualificationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpsertSignupQualificationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpsertSignupQualificationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpsertSignupQualificationRequest(val *UpsertSignupQualificationRequest) *NullableUpsertSignupQualificationRequest {
	return &NullableUpsertSignupQualificationRequest{value: val, isSet: true}
}

func (v NullableUpsertSignupQualificationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpsertSignupQualificationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


